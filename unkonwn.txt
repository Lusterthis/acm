void solve() {
    std::string n;
    std::cin >> n;
    
    int f = 1;
    for (auto c : n) {
        int d = c - '0';
        int x = d * d;
        int nf = f << d;
        if (x < 10) {
            nf |= f << x;
        }
        nf |= nf >> 9;
        nf &= (1 << 9) - 1;
        f = nf;
    }
    
    if (f & 1) {
        std::cout << "YES\n";
    } else {
        std::cout << "NO\n";
    }
}



ll n;
    cin >> n;
    vector<int>deg(n);
    //vector<Edge> a(n-1);
    vector<vector<int>>Edg(n);
    for(int i=0;i<n-1;i++){
        int u,v;
        cin>>u>>v;
        u--;v--;
        deg[u]++;
        deg[v]++;
        Edg[u].push_back(v);
        Edg[v].push_back(u);
        
        
    }
    
    if(n==2){
        cout<<0<<'\n';
        return;
    }
    int maxD=0;
    for(int i=0;i<n;i++){
        maxD=max(maxD,deg[i]);
    }
    int ans=0;
    for(int i=0;i<n;i++)
{
    
    if(deg[i]==maxD){//最大点
    for(auto j:Edg[i]){
        ans=max(ans,deg[i]+deg[j]-1);
    }

    for(int j=0;j<n;j++){
        if(j==i)continue;
        for(auto adj:Edg[i]){
            if(adj==j)continue;
            ans=max(ans,deg[i]+deg[j]-2);
        }
    }

    }
}    

    
    cout<<1+ans<<'\n';




     bool flag=true;
    for(int i=1;i<=n;++i){
        cin>>a[i];
        int tr=(a[i]-1)/2;
        if(i-tr<=0||i+tr>n){
            flag=false;
        }
    }
    
    if(!flag){
        cout<<-1<<"\n";
        return;
    }
    for(int i=2;i<=n;++i){
        int r=(a[i]-1)/2;
        //chck[i]=1;//////


        // if(r==0){
        //     ans[i]=!ans[i-1];
        //     continue;
        // }
        int cr=r+1;
        if(i-cr>0&&i+cr<=n){
            
                if(!chck[i+cr]){
                    ans[i+cr]=(!ans[i-cr]);
                    //cout<<ans[i+cr]<<endl;
                    chck[i+cr]=1;
                    chck[i-cr]=1;////////////////


                }
                else{
                    
                    if(ans[i-cr]==ans[i+cr]){///////////////

                        if(!chck[i-cr]){
                            ans[i-cr]=(!ans[i+cr]);
                            chck[i-cr]=1;
                            
                        }
                    else
                    {
                        cout<<-1<<"\n";
                        return;
                    }
                }
                }
            
        }
        while(r){
        if(!chck[i+r])
        {
            ans[i+r]=ans[i-r];
            chck[i+r]=1;
            chck[i-r]=1;
        }
        else{

            if(ans[i-r]!=ans[i+r]){
                cout<<-1<<"\n";
                return;
            }
        }
        r--;

    }

    }
    for(int i=1;i<=n;++i){
        cout<<ans[i];
    }









    #include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int i = 0; i < (n); ++i)
#define rep1(i, n) for (int i = 1; i <= (n); ++i)
#define ll long long
 
struct Point{
    int x, y;
    int val;
    //Point(int x, int y, int val): x(x), y(y), val(val) {}
};
bool comp(const Point& a,const Point& b){
    if(a.x == b.x) return a.y < b.y;
    return a.x < b.x;
}

void precalcu(){
    

}

void solve();
int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    //
    precalcu();
    //
    int t = 1;
    //cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}
vector<int> ans;
int n,m;
void dfs(vector<set<int>>& adj,  int cur){
    ans.push_back(cur);
    if(cur==1&&ans.size()==n+1){
        return;
    }
    for(auto nxt: adj[cur]){
        //adj[cur].erase(nxt);
        
        dfs(adj,nxt);
    }
}

void solve() {

    cin >> n >> m;
    vector<int> din(n+1),dout(n+1);
    vector<set<int>> adj(n+1);
    for(int i = 0; i < m; ++i){
        int u,v;
        cin >> u >> v;
        adj[u].insert(v);

        din[v]++;
        dout[u]++;

        
    }
    for(int i = 1; i <= n; ++i){
        if(din[i]!=dout[i]){
            cout<<"NP"<<"\n";
            return;
        }
    }
    dfs(adj,1);

}









  ll n,m,s;
    ll Y=0;
    cin>>n>>m>>s;
    vector<ll> w(n+1),v(n+1);
    for(int i=1;i<=n;i++){
        cin>>w[i]>>v[i];
    }
    vector<pair<ll,ll>> M(m+1);
    for(int i=1;i<=m;i++){
        ll l,r;
        cin>>l>>r;
    }
    int l=0,r=1e6;
    while(l<r){
        ll tmp=0;
        ll mid=(r+l)/2;
        for(int i=1;i<=n;i++){
           if(w[i]>=mid){
               tmp+=v[i];
           } 
        }
    }


int n,k;
    cin>>n>>k;
    ll ans=0;
    vector<int> a(n+1);
    vector<int>chck(n+1,1);
    vector<vector<int>>v(n+1);
    map<int,int>mp;
    for(int i=1;i<=n;i++){
        cin>>a[i];
        mp[a[i]]++;
        v[a[i]].push_back(i);
    }
    for(auto i:mp){
        int cnt=0;
        int tx=i.first;
        for(int j=0;j<v[tx].size();j++){
            int tl=v[tx][j],tr=v[tx][j];//下标
            while(
        }


    }
    cout<<ans<<'\n';